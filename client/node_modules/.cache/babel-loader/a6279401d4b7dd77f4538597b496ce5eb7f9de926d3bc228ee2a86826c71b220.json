{"ast":null,"code":"var _jsxFileName = \"/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext(undefined);\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isOpponentTyping, setIsOpponentTyping] = useState(false);\n  const typingTimeoutRef = useRef();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || socket) return;\n    console.log('Initializing socket connection...');\n    const newSocket = io('http://localhost:5001', {\n      auth: {\n        token\n      }\n    });\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to game server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from game server');\n    });\n    newSocket.on('queue-joined', () => {\n      console.log('Successfully joined queue');\n    });\n    newSocket.on('game-started', data => {\n      console.log('Game started:', data);\n      setIsPlaying(true);\n      setMessages([]);\n    });\n    newSocket.on('game-ended', result => {\n      console.log('Game ended:', result);\n      setIsPlaying(false);\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n    setSocket(newSocket);\n    return () => {\n      console.log('Cleaning up socket connection...');\n      newSocket.close();\n    };\n  }, []);\n  const startGame = () => {\n    if (!socket) {\n      console.error('Socket not connected');\n      return;\n    }\n    if (isPlaying) {\n      console.log('Already in a game');\n      return;\n    }\n    console.log('Emitting join-queue event');\n    socket.emit('join-queue');\n  };\n  const endGame = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      setMessages([]);\n      setIsOpponentTyping(false);\n    }\n  };\n  const sendMessage = content => {\n    if (socket) {\n      socket.emit('send-message', content);\n    }\n  };\n  const makeGuess = guess => {\n    if (socket) {\n      socket.emit('make-guess', guess);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      isPlaying,\n      messages,\n      isConnected,\n      isOpponentTyping,\n      startGame,\n      endGame,\n      sendMessage,\n      makeGuess\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"zfQks1v1zb9o36nR8Xc1/U9k6nY=\");\n_c = GameProvider;\nexport const useGame = () => {\n  _s2();\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n};\n_s2(useGame, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","GameContext","undefined","GameProvider","children","_s","socket","setSocket","isPlaying","setIsPlaying","isConnected","setIsConnected","messages","setMessages","isOpponentTyping","setIsOpponentTyping","typingTimeoutRef","token","localStorage","getItem","console","log","newSocket","auth","on","data","result","error","close","startGame","emit","endGame","sendMessage","content","makeGuess","guess","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGame","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface Message {\n  id: string;\n  content: string;\n  senderId: string;\n  timestamp: Date;\n}\n\ninterface GameContextType {\n  isPlaying: boolean;\n  messages: Message[];\n  isConnected: boolean;\n  isOpponentTyping: boolean;\n  startGame: () => void;\n  endGame: () => void;\n  sendMessage: (content: string) => void;\n  makeGuess: (guess: 'human' | 'ai') => void;\n}\n\nconst GameContext = createContext<GameContextType | undefined>(undefined);\n\nexport const GameProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isOpponentTyping, setIsOpponentTyping] = useState(false);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || socket) return;\n\n    console.log('Initializing socket connection...');\n    const newSocket = io('http://localhost:5001', {\n      auth: { token }\n    });\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to game server');\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from game server');\n    });\n\n    newSocket.on('queue-joined', () => {\n      console.log('Successfully joined queue');\n    });\n\n    newSocket.on('game-started', (data) => {\n      console.log('Game started:', data);\n      setIsPlaying(true);\n      setMessages([]);\n    });\n\n    newSocket.on('game-ended', (result) => {\n      console.log('Game ended:', result);\n      setIsPlaying(false);\n    });\n\n    newSocket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n\n    setSocket(newSocket);\n\n    return () => {\n      console.log('Cleaning up socket connection...');\n      newSocket.close();\n    };\n  }, []);\n\n  const startGame = () => {\n    if (!socket) {\n      console.error('Socket not connected');\n      return;\n    }\n    if (isPlaying) {\n      console.log('Already in a game');\n      return;\n    }\n    \n    console.log('Emitting join-queue event');\n    socket.emit('join-queue');\n  };\n\n  const endGame = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      setMessages([]);\n      setIsOpponentTyping(false);\n    }\n  };\n\n  const sendMessage = (content: string) => {\n    if (socket) {\n      socket.emit('send-message', content);\n    }\n  };\n\n  const makeGuess = (guess: 'human' | 'ai') => {\n    if (socket) {\n      socket.emit('make-guess', guess);\n    }\n  };\n\n  return (\n    <GameContext.Provider value={{ \n      isPlaying, \n      messages, \n      isConnected,\n      isOpponentTyping,\n      startGame, \n      endGame, \n      sendMessage, \n      makeGuess \n    }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const useGame = () => {\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACrF,SAASC,EAAE,QAAgB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoB9C,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMqB,gBAAgB,GAAGnB,MAAM,CAAiB,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,IAAIX,MAAM,EAAE;IAEtBc,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAMC,SAAS,GAAGxB,EAAE,CAAC,uBAAuB,EAAE;MAC5CyB,IAAI,EAAE;QAAEN;MAAM;IAChB,CAAC,CAAC;IAEFK,SAAS,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5Bb,cAAc,CAAC,IAAI,CAAC;MACpBS,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC;IAEFC,SAAS,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/Bb,cAAc,CAAC,KAAK,CAAC;MACrBS,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;IAEFC,SAAS,CAACE,EAAE,CAAC,cAAc,EAAE,MAAM;MACjCJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC;IAEFC,SAAS,CAACE,EAAE,CAAC,cAAc,EAAGC,IAAI,IAAK;MACrCL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,IAAI,CAAC;MAClChB,YAAY,CAAC,IAAI,CAAC;MAClBI,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;IAEFS,SAAS,CAACE,EAAE,CAAC,YAAY,EAAGE,MAAM,IAAK;MACrCN,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,MAAM,CAAC;MAClCjB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFa,SAAS,CAACE,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MAC/BP,OAAO,CAACO,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,CAAC;IAEFpB,SAAS,CAACe,SAAS,CAAC;IAEpB,OAAO,MAAM;MACXF,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CC,SAAS,CAACM,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACvB,MAAM,EAAE;MACXc,OAAO,CAACO,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IACA,IAAInB,SAAS,EAAE;MACbY,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACF;IAEAD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCf,MAAM,CAACwB,IAAI,CAAC,YAAY,CAAC;EAC3B,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIvB,SAAS,EAAE;MACbC,YAAY,CAAC,KAAK,CAAC;MACnBI,WAAW,CAAC,EAAE,CAAC;MACfE,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMiB,WAAW,GAAIC,OAAe,IAAK;IACvC,IAAI3B,MAAM,EAAE;MACVA,MAAM,CAACwB,IAAI,CAAC,cAAc,EAAEG,OAAO,CAAC;IACtC;EACF,CAAC;EAED,MAAMC,SAAS,GAAIC,KAAqB,IAAK;IAC3C,IAAI7B,MAAM,EAAE;MACVA,MAAM,CAACwB,IAAI,CAAC,YAAY,EAAEK,KAAK,CAAC;IAClC;EACF,CAAC;EAED,oBACEnC,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAE;MAC3B7B,SAAS;MACTI,QAAQ;MACRF,WAAW;MACXI,gBAAgB;MAChBe,SAAS;MACTE,OAAO;MACPC,WAAW;MACXE;IACF,CAAE;IAAA9B,QAAA,EACCA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpC,EAAA,CAtGWF,YAAqD;AAAAuC,EAAA,GAArDvC,YAAqD;AAwGlE,OAAO,MAAMwC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGnD,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI4C,OAAO,KAAK3C,SAAS,EAAE;IACzB,MAAM,IAAI4C,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}