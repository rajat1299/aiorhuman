{"ast":null,"code":"var _jsxFileName = \"/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext(undefined);\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isOpponentTyping, setIsOpponentTyping] = useState(false);\n  const typingTimeoutRef = useRef();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || socket) return;\n    const newSocket = io('http://localhost:5001', {\n      auth: {\n        token\n      }\n    });\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n    newSocket.on('message', message => {\n      setMessages(prev => [...prev, message]);\n    });\n    newSocket.on('game-started', () => {\n      setIsPlaying(true);\n      setMessages([]);\n    });\n    newSocket.on('game-ended', result => {\n      console.log('Game ended:', result);\n      setIsPlaying(false);\n    });\n    newSocket.on('opponent-typing', () => {\n      setIsOpponentTyping(true);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => setIsOpponentTyping(false), 3000);\n    });\n    setSocket(newSocket);\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      newSocket.close();\n    };\n  }, []);\n  const startGame = () => {\n    if (socket && !isPlaying) {\n      console.log('Emitting join-queue');\n      socket.emit('join-queue');\n    }\n  };\n  const endGame = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      setMessages([]);\n      setIsOpponentTyping(false);\n    }\n  };\n  const sendMessage = content => {\n    if (socket) {\n      socket.emit('send-message', content);\n    }\n  };\n  const makeGuess = guess => {\n    if (socket) {\n      socket.emit('make-guess', guess);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      isPlaying,\n      messages,\n      isConnected,\n      isOpponentTyping,\n      startGame,\n      endGame,\n      sendMessage,\n      makeGuess\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"zfQks1v1zb9o36nR8Xc1/U9k6nY=\");\n_c = GameProvider;\nexport const useGame = () => {\n  _s2();\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n};\n_s2(useGame, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","GameContext","undefined","GameProvider","children","_s","socket","setSocket","isPlaying","setIsPlaying","isConnected","setIsConnected","messages","setMessages","isOpponentTyping","setIsOpponentTyping","typingTimeoutRef","token","localStorage","getItem","newSocket","auth","on","console","log","message","prev","result","current","clearTimeout","setTimeout","close","startGame","emit","endGame","sendMessage","content","makeGuess","guess","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGame","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface Message {\n  id: string;\n  content: string;\n  senderId: string;\n  timestamp: Date;\n}\n\ninterface GameContextType {\n  isPlaying: boolean;\n  messages: Message[];\n  isConnected: boolean;\n  isOpponentTyping: boolean;\n  startGame: () => void;\n  endGame: () => void;\n  sendMessage: (content: string) => void;\n  makeGuess: (guess: 'human' | 'ai') => void;\n}\n\nconst GameContext = createContext<GameContextType | undefined>(undefined);\n\nexport const GameProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isOpponentTyping, setIsOpponentTyping] = useState(false);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || socket) return;\n\n    const newSocket = io('http://localhost:5001', {\n      auth: { token }\n    });\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n\n    newSocket.on('message', (message: Message) => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    newSocket.on('game-started', () => {\n      setIsPlaying(true);\n      setMessages([]);\n    });\n\n    newSocket.on('game-ended', (result) => {\n      console.log('Game ended:', result);\n      setIsPlaying(false);\n    });\n\n    newSocket.on('opponent-typing', () => {\n      setIsOpponentTyping(true);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => setIsOpponentTyping(false), 3000);\n    });\n\n    setSocket(newSocket);\n\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      newSocket.close();\n    };\n  }, []);\n\n  const startGame = () => {\n    if (socket && !isPlaying) {\n      console.log('Emitting join-queue');\n      socket.emit('join-queue');\n    }\n  };\n\n  const endGame = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      setMessages([]);\n      setIsOpponentTyping(false);\n    }\n  };\n\n  const sendMessage = (content: string) => {\n    if (socket) {\n      socket.emit('send-message', content);\n    }\n  };\n\n  const makeGuess = (guess: 'human' | 'ai') => {\n    if (socket) {\n      socket.emit('make-guess', guess);\n    }\n  };\n\n  return (\n    <GameContext.Provider value={{ \n      isPlaying, \n      messages, \n      isConnected,\n      isOpponentTyping,\n      startGame, \n      endGame, \n      sendMessage, \n      makeGuess \n    }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const useGame = () => {\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}