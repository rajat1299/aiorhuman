{"ast":null,"code":"var _jsxFileName = \"/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useSocket } from './SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext(undefined);\nexport const GameProvider = ({\n  children,\n  sessionId\n}) => {\n  _s();\n  const socket = useSocket();\n  const [isPlaying] = useState(!!sessionId);\n  const sendMessage = message => {\n    if (!socket || !sessionId) return;\n    socket.emit('send-message', {\n      sessionId,\n      content: message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      isPlaying,\n      sendMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"xmT7wuHjv2Wq32o1jOnTDKFfZcw=\", false, function () {\n  return [useSocket];\n});\n_c = GameProvider;\nexport const useGame = () => {\n  _s2();\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n};\n_s2(useGame, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useSocket","jsxDEV","_jsxDEV","GameContext","undefined","GameProvider","children","sessionId","_s","socket","isPlaying","sendMessage","message","emit","content","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGame","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rajattiwari/aiorhuman/client/src/contexts/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { useSocket } from './SocketContext';\n\ninterface GameContextType {\n  isPlaying: boolean;\n  sendMessage: (message: string) => void;\n}\n\nconst GameContext = createContext<GameContextType | undefined>(undefined);\n\nexport const GameProvider: React.FC<{ \n  children: React.ReactNode;\n  sessionId?: string;\n}> = ({ children, sessionId }) => {\n  const socket = useSocket();\n  const [isPlaying] = useState(!!sessionId);\n\n  const sendMessage = (message: string) => {\n    if (!socket || !sessionId) return;\n    \n    socket.emit('send-message', {\n      sessionId,\n      content: message\n    });\n  };\n\n  return (\n    <GameContext.Provider value={{ isPlaying, sendMessage }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const useGame = () => {\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAGX,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAACQ,SAAS,CAAC;EAEzC,MAAMI,WAAW,GAAIC,OAAe,IAAK;IACvC,IAAI,CAACH,MAAM,IAAI,CAACF,SAAS,EAAE;IAE3BE,MAAM,CAACI,IAAI,CAAC,cAAc,EAAE;MAC1BN,SAAS;MACTO,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEN,SAAS;MAAEC;IAAY,CAAE;IAAAL,QAAA,EACrDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CArBWH,YAGX;EAAA,QACeL,SAAS;AAAA;AAAAqB,EAAA,GAJbhB,YAGX;AAoBF,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1B,UAAU,CAACK,WAAW,CAAC;EACvC,IAAIqB,OAAO,KAAKpB,SAAS,EAAE;IACzB,MAAM,IAAIqB,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}