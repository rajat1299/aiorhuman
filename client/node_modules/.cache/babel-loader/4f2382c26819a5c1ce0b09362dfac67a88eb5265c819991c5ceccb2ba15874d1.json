{"ast":null,"code":"var _jsxFileName = \"/Users/rajattiwari/aiorhuman/client/src/pages/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useGame } from '../contexts/GameContext';\nimport ChatWindow from '../components/game/ChatWindow';\nimport GameControls from '../components/game/GameControls';\nimport GameResults from '../components/game/GameResults';\nimport Spinner from '../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    isPlaying,\n    startGame,\n    endGame,\n    isConnected\n  } = useGame();\n  const [gameResult, setGameResult] = useState(null);\n\n  // Only clean up when component unmounts\n  useEffect(() => {\n    return () => {\n      if (isPlaying) {\n        endGame();\n      }\n    };\n  }, []); // Empty dependency array\n\n  const handlePlayAgain = () => {\n    setGameResult(null);\n    startGame();\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-game-light\",\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isPlaying && !gameResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-game-light\",\n        children: \"Ready to Play?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"btn btn-primary\",\n        children: \"Find Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-rows-[1fr,auto] gap-4 h-[calc(100vh-12rem)]\",\n      children: [/*#__PURE__*/_jsxDEV(ChatWindow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(GameResults, {\n      result: gameResult,\n      onPlayAgain: handlePlayAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"HX5+gJGZta/dTHzuLn7eVzcpEMw=\", false, function () {\n  return [useGame];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","useGame","ChatWindow","GameControls","GameResults","Spinner","jsxDEV","_jsxDEV","Game","_s","isPlaying","startGame","endGame","isConnected","gameResult","setGameResult","handlePlayAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","result","onPlayAgain","_c","$RefreshReg$"],"sources":["/Users/rajattiwari/aiorhuman/client/src/pages/Game.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useGame } from '../contexts/GameContext';\nimport ChatWindow from '../components/game/ChatWindow';\nimport GameControls from '../components/game/GameControls';\nimport GameResults from '../components/game/GameResults';\nimport Spinner from '../components/Spinner';\n\ninterface GameResult {\n  winner?: string;\n  forfeitedBy?: string;\n  error?: string;\n  stats: {\n    player1Correct: boolean;\n    player2Correct: boolean;\n    duration: number;\n    messageCount: number;\n  };\n}\n\nconst Game: React.FC = () => {\n  const { isPlaying, startGame, endGame, isConnected } = useGame();\n  const [gameResult, setGameResult] = useState<GameResult | null>(null);\n\n  // Only clean up when component unmounts\n  useEffect(() => {\n    return () => {\n      if (isPlaying) {\n        endGame();\n      }\n    };\n  }, []); // Empty dependency array\n\n  const handlePlayAgain = () => {\n    setGameResult(null);\n    startGame();\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"max-w-4xl mx-auto text-center py-12\">\n        <h2 className=\"text-2xl font-bold mb-4 text-game-light\">Connecting to server...</h2>\n        <Spinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (!isPlaying && !gameResult) {\n    return (\n      <div className=\"max-w-4xl mx-auto text-center py-12\">\n        <h2 className=\"text-2xl font-bold mb-4 text-game-light\">Ready to Play?</h2>\n        <button\n          onClick={startGame}\n          className=\"btn btn-primary\"\n        >\n          Find Match\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto py-8\">\n      <div className=\"grid grid-rows-[1fr,auto] gap-4 h-[calc(100vh-12rem)]\">\n        <ChatWindow />\n        <GameControls />\n      </div>\n      {gameResult && (\n        <GameResults \n          result={gameResult} \n          onPlayAgain={handlePlayAgain} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}